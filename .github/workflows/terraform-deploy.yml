name: Terraform Plan

on:
  push:
    branches: [main]
    paths: [deployment/*]
  pull_request:
    paths: [deployment/*]

concurrency:
  group: Prod
  cancel-in-progress: true

jobs:
  fmt:
    name: Format .tf files
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - uses: actions/checkout@v4

      - run: task fmted
        id: fmted
        continue-on-error: true

      - run: task fmt
        if: always() && (steps.fmted.outcome == 'failure')

      - uses: stefanzweifel/git-auto-commit-action@v5
        if: success() && (steps.fmted.outcome == 'failure')

  tflint:
    needs: fmt
    name: Lint .tf files
    runs-on: ubuntu-latest
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4.1.0

      - name: Checkout
        uses: actions/checkout@v4

      - run: task lint

  terraform:
    needs: tflint
    name: Terraform plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: Prod
    steps:
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4.1.0

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: 'eu-north-1'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Checkout
        uses: actions/checkout@v4

      - run: task terraform -- init

      - run: task terraform -- plan
        id: tfplan

#      - name: Generate token
#        id: generate_token
#        uses: tibdex/github-app-token@v1
#        with:
#          app_id: ${{ secrets.APP_ID }}
#          private_key: ${{ secrets.APP_PRIVATE_KEY }}
#
#      - name: Manual Workflow Approval
#        uses: trstringer/manual-approval@v1.9.1
#        with:
#          approvers: Alzgaymer
#          secret: ${{ steps.generate_token.outputs.token }}
#          minimum-approvals: 1
#          issue-title: Deploy Terraform infrastructure
#          issue-body: |
#            Deploying infrastructure from ${{github.ref}}.
#            ${{steps.tfplan.outputs}}
#            Write *deploy* to deploy
#          additional-approved-words: deploy

      - run: task terraform -- apply --auto-approve=true
