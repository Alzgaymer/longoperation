openapi: 3.0.1
info:
  title: Long operation
  description: Long operation
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Local server

components:
  requestBodies:
    waitfor:
      description: Specifies time to wait before operation runs
      content:
        application/json:
          schema:
            type: object
            properties:
              wait-for:
                type: integer
                format: int64

  schemas:
    operationResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string

  responses:
    get-waitfor:
      description: Wait for response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/operationResponse'

    create-waitfor:
      description: Wait for response
      headers:
        Operation-ID:
          $ref: "#/components/headers/operationID"
        Operation-Link:
          $ref: "#/components/headers/operationLocation"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/operationResponse'

  headers:
    operationID:
      description: Shows operation ID
      schema:
        type: string
    operationLocation:
      description: Link to operation
      schema:
        type: string

  parameters:
    operationIdPath:
      in: path
      name: id
      required: true
      schema:
        type: string
    filePath:
      in: path
      name: file
      required: true
      schema:
        type: string

paths:
  /api/v1/operations:
    post:
      description: Runs long running operation
      summary: Runs long running operation
      requestBody:
        $ref: "#/components/requestBodies/waitfor"
      responses:
        202:
          $ref: "#/components/responses/create-waitfor"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        uri: "http://${fargate_service_url}/api/v1/operations"
        httpMethod: "POST"
        connectionType: "VPC_LINK"
        connectionId: "${vpc_link_id}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000

  /api/v1/operations/{id}:
    get:
      description: Returns operation status
      parameters:
        - $ref: "#/components/parameters/operationIdPath"
      responses:
        200:
          $ref: "#/components/responses/get-waitfor"
      x-amazon-apigateway-integration:
        type: "http_proxy"
        uri: "http://${fargate_service_url}/api/v1/operations/{id}"
        httpMethod: "GET"
        connectionType: "VPC_LINK"
        connectionId: "${vpc_link_id}"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000

  /oapi/{file}:
    get:
      summary: "Get Swagger UI index page"
      parameters:
        - $ref: "#/components/parameters/filePath"
      responses:
        '200':
          description: "200 response"
          headers:
            Content-Type:
              schema:
                type: "string"
          content:
            text/html: { }
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "${role_arn}"
        uri: "arn:aws:apigateway:${region}:s3:path/${bucket_name}/{file}"
        requestParameters:
          integration.request.path.file: method.request.path.file
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "integration.response.header.Content-Type"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"