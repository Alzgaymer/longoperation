openapi: 3.0.1
info:
  title: Long operation
  description: Long operation
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Local server

components:
  requestBodies:
    waitfor:
      description: Specifies time to wait before operation runs
      content:
        application/json:
          schema:
            type: object
            properties:
              wait-for:
                type: integer
                format: int64

  responses:
    get-waitfor:
      description: Wait for response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
              status:
                type: string

    create-waitfor:
      description: Wait for response
      content:
        application/json:
          headers:
            Operation-ID:
              $ref: "#/components/parameters/operationID"
            Operation-Link:
              $ref: "#/components/parameters/operationLocation"
          schema:
            type: object
            properties:
              id:
                type: string
              status:
                type: string

  parameters:
    operationID:
      in: header
      description: Shows operation ID
      required: true
      schema:
        type: string
    operationLocation:
      in: header
      description: Link to operation
      required: true
      schema:
        type: string

paths:
  /api/v1/operations:
    post:
      description: Runs long running operation
      summary: Runs long running operation
      requestBody:
        $ref: "#/components/requestBodies/waitfor"
      responses:
        202:
          $ref: "#/components/responses/create-waitfor"
      x-amazon-apigateway-integration:
        type: "mock"
        requestTemplates:
          application/json: |
            {
              "statusCode": 200,
              "body": {
                "id": "$context.requestId",
                "status": "SUCCESS"
              }
            }
        responses:
          default:
            statusCode: "200"

  /api/v1/operations/{id}:
    get:
      description: Returns operation status
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/get-waitfor"
      x-amazon-apigateway-integration:
        type: "mock"
        requestTemplates:
          application/json: |
            {
              "statusCode": 200,
              "body": {
                "id": "$context.requestId",
                "status": "SUCCESS"
              }
            }
        responses:
          default:
            statusCode: "200"


  /oapi/{file}:
    get:
      summary: "Get Swagger UI index page"
      parameters:
        - name: file
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "200 response"
          headers:
            Content-Type:
              schema:
                type: "string"
          content:
            text/html: { }
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "${role_arn}"
        uri: "arn:aws:apigateway:${region}:s3:path/${bucket_name}/{file}"
        requestParameters:
          integration.request.path.file: method.request.path.file
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "integration.response.header.Content-Type"
              responseParameters:
                method.response.header.Content-Type: "integration.response.header.Content-Type"
                method.response.header.Access-Control-Allow-Origin: "'*'"
                method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"